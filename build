#!/bin/bash

set -e -o pipefail
shopt -s dotglob extglob globstar nullglob

if (( $$ != 1 )); then
  cd -- "${0%/*}"
  mkdir -p bin

  if [[ -d $IMGDIR/../arm32 ]]; then
    export IMGDIR=$IMGDIR/../arm32
  elif [[ -d $HOME/img/arm32 ]]; then
    export IMGDIR=$HOME/img/arm32
  else
    echo "Unable to find arm32 images" >&2
    exit 1
  fi

  TMP=$(mktemp -d build-XXXXXX)
  trap 'rm -f -r $TMP' EXIT

  pkg system $TMP/rootfs dnsmasq hostap iproute2 iputils-ping iw ldns-tools \
    kakoune mtr nftables openntpd openssh rsync shadow tcpdump tinymbim \
    tmux wireguard
  update-etc $TMP/rootfs/etc
  rm -f -r $TMP/rootfs/{etc/resolv.conf,lib/{include,static},run,tmp,var}
  mkdir -p $TMP/rootfs/{dev,home/root,proc,run,sys,tmp}
  cp -d -R -T etc/base $TMP/rootfs/etc && chmod 0600 $TMP/rootfs/etc/shadow
  ln -s run $TMP/rootfs/var

  pkg shell -s . build bc bison dtc flex m4 perl -- \
    env MAKEFLAGS=-j$((1 + $(nproc))) TMP=$TMP "/src/${0##*/}" "$@"
elif [[ -d $TMP ]]; then
  pkg unpack -d $TMP/mtd-utils \
    https://infraroot.at/pub/mtd/mtd-utils-2.1.5.tar.bz2
  printf '%s\0' patches/mtd-* | xargs -n 1 -0 pkg apply -d $TMP/mtd-utils

  pkg unpack -d $TMP/openwrt \
    https://github.com/openwrt/openwrt/archive/a20735da.tar.gz

  pkg unpack -d $TMP/linux \
    https://cdn.kernel.org/pub/linux/kernel/v5.x/linux-5.15.120.tar.xz
  cp -r $TMP/openwrt/target/linux/{generic,ipq40xx}/files/* $TMP/linux
  printf '%s\0' \
    $TMP/openwrt/target/linux/generic/{backport,pending,hack}-5.15/* \
    $TMP/openwrt/target/linux/ipq40xx/patches-5.15/* \
    patches/linux-* | xargs -n 1 -0 pkg apply -d $TMP/linux

  pkg apply -d $TMP/linux/drivers/net/wireless/ath/ath10k -p 2 \
    https://raw.githubusercontent.com/openwrt/openwrt/a3469a90/package/kernel/ath10k-ct/patches/120-ath10k-fetch-calibration-data-via-nvmem-subsystem.patch

  pkg unpack -d $TMP/u-boot \
    https://github.com/u-boot/u-boot/archive/refs/tags/v2023.04.tar.gz

  if [[ ! -f bin/uboot.img ]]; then
    curl -o bin/uboot.img.tmp -L \
      https://github.com/gl-inet/uboot-ipq40xx/raw/6913cdfb/uboot-gl-ap1300-\
b1300-s1300-b2200-20220826-md5-b599d2fa9955ca701fc25e6d29659c86.bin
    mv -f bin/uboot.img.tmp bin/uboot.img
  fi

  printf '\0\0\0\0' >bin/environ.img
  while read -r KEY VALUE; do
    [[ -n $KEY ]] && printf '%s=%s\0' "$KEY" "$VALUE"
  done <config/environ >>bin/environ.img
  truncate -s 65536 bin/environ.img
  tail -c +5 bin/environ.img | gzip -c | tail -c 8 \
    | dd bs=4 conv=notrunc count=1 of=bin/environ.img 2>/dev/null

  cp config/kernel.cfg $TMP/linux/.config && echo 0 >$TMP/linux/.version
  make -C $TMP/linux olddefconfig Image ARCH=arm
  gzip -c -n -9 $TMP/linux/arch/arm/boot/Image >bin/kernel.gz

  cpp -nostdinc -undef -x assembler-with-cpp \
      -I $TMP/linux/include -I $TMP/linux/arch \
      $TMP/linux/arch/arm/boot/dts/qcom-ipq4018-gl-ap1300.dts \
    | dtc -O dtb -o bin/qcom-ipq4018-gl-ap1300.dtb -

  cd $TMP/mtd-utils
  bash configure --without-jffs --without-lzo \
    UUID_CFLAGS=-I/lib/include/uuid UUID_LIBS=-luuid \
    ZLIB_CFLAGS=-I/lib/include ZLIB_LIBS=-lz \
    ZSTD_CFLAGS=-I/lib/include ZSTD_LIBS=-lzstd
  make flashcp mkfs.ubifs ubiattach ubidetach ubiformat \
    ubinize ubiupdatevol
  cd -

  make -C $TMP/u-boot tools-only_defconfig tools-only CC=cc \
    CONFIG_TOOLS_MKEFICAPSULE=n SDL_CONFIG=false

  cp -f $TMP/mtd-utils/{flashcp,ubiattach,ubidetach,ubiformat,ubiupdatevol} \
    $TMP/rootfs/bin
  ln -f -s etc/init $TMP/rootfs/init
  tar -c -f bin/initramfs.cpio.zst --format=newc --strip-components=2 \
    --zstd --options zstd:compression-level=9 $TMP/rootfs
  tar -c -f - --format=newc @/dev/null >>bin/initramfs.cpio.zst
  rm -f $TMP/rootfs/init

  $TMP/u-boot/tools/mkimage -f config/initramfs.its bin/initramfs.itb
  $TMP/u-boot/tools/mkimage -f config/kernel.its bin/kernel.itb

  $TMP/mtd-utils/mkfs.ubifs -o bin/rootfs.ubifs -r $TMP/rootfs -m 2048 \
    -e 126976 -x zstd -c 1023
  $TMP/mtd-utils/ubinize -o bin/image.ubi -m 2048 -p 131072 config/image.cfg
fi
