#!/bin/bash

set -e -o pipefail
shopt -s dotglob extglob globstar nullglob

if (( $$ != 1 )); then
  cd -- "${0%/*}"
  mkdir -p bin cache

  if [[ -d $IMGDIR/../arm32 ]]; then
    export IMGDIR=$IMGDIR/../arm32
  elif [[ -d $HOME/img/arm32 ]]; then
    export IMGDIR=$HOME/img/arm32
  else
    echo "Unable to find arm32 images" >&2
    exit 1
  fi

  if [[ ! -d rootfs ]]; then
    pkg system rootfs curl dnsmasq file hostap iproute2 iputils-ping iw \
      ldns-tools kakoune mtr nftables openntpd openssh rsync shadow tcpdump \
      tinymbim tmux wireguard
    update-etc rootfs/etc
    rm -f -r rootfs/{etc/resolv.conf,lib/{include,static},run,tmp,var}
    mkdir -p rootfs/{dev,home/root,proc,run,sys,tmp}
    cp -d -R -T etc/base rootfs/etc && chmod 0600 rootfs/etc/shadow
    ln -s run rootfs/var
  fi

  pkg shell -s . build bc bison dtc flex m4 perl -- \
    env MAKEFLAGS=-j$((1 + $(nproc))) "/src/${0##*/}" "$@"
  exit 0
fi

if [[ ! -d src ]]; then
  TMP=$(mktemp -d src-XXXXXX)
  trap "rm -f -r $TMP" EXIT

  pkg unpack -c cache -d $TMP/mtd-utils \
    https://infraroot.at/pub/mtd/mtd-utils-2.2.0.tar.bz2
  printf '%s\0' patches/mtd-* | xargs -n 1 -0 pkg apply -d $TMP/mtd-utils

  pkg unpack -c cache -d $TMP/linux \
    https://cdn.kernel.org/pub/linux/kernel/v6.x/linux-6.8.12.tar.xz
  printf '%s\0' patches/linux-* | xargs -n 1 -0 pkg apply -d $TMP/linux

  pkg unpack -c cache -d $TMP/u-boot u-boot-2024.04.tar.gz \
    https://github.com/u-boot/u-boot/archive/refs/tags/v2024.04.tar.gz

  mv $TMP src
  trap - EXIT
fi

if [[ ! -f bin/uboot.img ]]; then
  echo "Downloading uboot.img from https://github.com/gl-inet/uboot-ipq40xx/:" >&2
  curl -o bin/uboot.img.tmp -L \
    https://github.com/gl-inet/uboot-ipq40xx/raw/6913cdfb/uboot-gl-ap1300-\
b1300-s1300-b2200-20220826-md5-b599d2fa9955ca701fc25e6d29659c86.bin
  mv -f bin/uboot.img.tmp bin/uboot.img
fi

printf '\0\0\0\0' >bin/environ.img
while read -r KEY VALUE; do
  [[ -n $KEY ]] && printf '%s=%s\0' "$KEY" "$VALUE"
done <config/environ >>bin/environ.img
truncate -s 65536 bin/environ.img
tail -c +5 bin/environ.img | gzip -c | tail -c 8 \
  | dd bs=4 conv=notrunc count=1 of=bin/environ.img 2>/dev/null

cd src/mtd-utils
bash configure --without-jffs --without-lzo \
  UUID_CFLAGS=-I/lib/include/uuid UUID_LIBS=-luuid \
  ZLIB_CFLAGS=-I/lib/include ZLIB_LIBS=-lz \
  ZSTD_CFLAGS=-I/lib/include ZSTD_LIBS=-lzstd
make flashcp mkfs.ubifs ubinize ubi{attach,detach,format,updatevol}
install -s -t /src/rootfs/bin flashcp ubi{attach,detach,format,updatevol}
cd -

ln -f -s etc/init rootfs/init
tar -c -f - --format=newc --strip-components=1 rootfs \
  | zstd -c -19 >bin/initramfs.cpio.zst
truncate -s +4k bin/initramfs.cpio.zst
rm -f rootfs/init

cp config/kernel.cfg src/linux/.config && echo 0 >src/linux/.version
make -C src/linux olddefconfig Image dtbs ARCH=arm
gzip -c -n -9 src/linux/arch/arm/boot/Image >bin/kernel.gz
cp src/linux/arch/arm/boot/dts/qcom/qcom-ipq4018-gl-ap1300.dtb \
  bin/gl-ap1300.dtb

make -C src/u-boot tools-only_defconfig tools-only CC=cc \
  CONFIG_TOOLS_MKEFICAPSULE=n SDL_CONFIG=false
src/u-boot/tools/mkimage -f config/initramfs.its bin/initramfs.itb
src/u-boot/tools/mkimage -f config/kernel.its bin/kernel.itb

src/mtd-utils/mkfs.ubifs -o bin/rootfs.ubifs -r rootfs -m 2048 -e 126976 \
  -x zstd -c 1023
src/mtd-utils/ubinize -o bin/image.ubi -m 2048 -p 131072 config/image.cfg
